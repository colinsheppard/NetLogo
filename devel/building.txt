DON'T FORGET TO CHANGE NETLOGO.SCALA AND PROGUARD/COMMON.TXT SO THE
BUILD WILL WORK ON JAVA 5!!! (#844, #1186)

===

As you work through these instructions, look for things which could be
more fully automated -- and automate them!

PREREQUISITES:
- You must be on Mac OS X 10.7.  (The dmg-building stuff is
  Mac-only.)  Well, 10.6 might work.
- You must have install4j, which you can download from here:
  http://www.ej-technologies.com/download/install4j/files.php
  You'll need a license key. Seth has one owned by Uri.
  The release building script expects to find install4j in
  /Applications. The script checks to be sure you have the
  right version. The folder can be copied from machine to machine.
- You must have the exact right version of htmldoc in your path.
  release.sh will test for this and complain if it doesn't find it.
  If it doesn't find it, then here's how to install it.  (The URL
  below should work, but if you need to look up htmldoc on the web
  yourself, be aware that the same company offers both a commercial
  version and a free, open source version.  They make the free one a
  bit hard to find, in an effort to steer you towards the version that
  costs money.)
  - go to http://htmldoc.org/software.php
  - download a source tarball
  - untar the tarball
  - from the command line, cd into the untarred source tree, then do:
      ./configure --prefix=/usr/local
      make
      sudo make install

ahead of time:
- ask Seth for the NetLogo change list
  or construct it yourself using the Trac and/or git. details:
  https://ccl.northwestern.edu/mailman/private/ccl-devel/2008/030764.html
  in Trac, you might look both at the Timeline, and at the "Roadmap"
  where you can get a list of closed tickets for a given target.
  sometimes other people can supply pieces of the change list, for
  example, Josh/HubNet.  the change list will be used to construct
  the release announcement, so it should include even stuff like changes
  to secret prims.  don't forget to include changes to the Models Library.
  devel folks are encouraged to make a ticket every time they make a bullet-
  worthy change, so the roadmap will have the changes already.
- decide if you need to upgrade the bundled java with the windows
  installer.  consult
    http://java.sun.com/javase/6/webnotes/ReleaseNotes.html
  for details on Java 6 updates. (at some point we should move to Java 7)
  If you do, make a new bundle using install4j on a windows
  machine (Project -> Create JRE Bundles). The JDK of the target
  version should be installed before you can make the vm pack,
  remember to install the JDK not just the jre so you get the server
  vm.  For "Custom bundle id", enter "server"
  Note: when you update the vm pack you need to change the
  version number in release.sh.
- do a trial run of release.sh now, including Windows installers,
  just to make sure something doesn't fail. this avoids nasty
  surprises later when you might be in a hurry
 
misc:
- build all of the model previews (takes quite a while!)
  use "sbt previews"
- do all of the checks in netlogo/devel/checks.txt
  (or maybe skip some, especially if it's not a public release...)
- update version number and date in resources/system/version.txt
  and project/build.properties
  (replace INTERIM DEVEL BUILD with date, e.g. "Octember 42, 2525")
- update the version compatibility tests in org.nlogo.api.TestVersion?
- update copyright year in org/nlogo/app/AboutWindow.java,
  dist/readme.txt, docs/copyright.html system/resources/about.txt
  dist/lab-readme.txt, and at the top of all source files.  if the
  year changed, it's a good time to make sure all source files have
  the copyright and GitHub link at the top.
- also bump the version number in the sample manifest
  in docs/extension.html (should match the version in
  org.nlogo.api.APIVersion) (note: this really ought to be handled
  by release.sh; if you have any extra time, make it be so!)
- update the version number in docs/mathematica.html
  (this doesn't need to track the specific version number,
  so e.g. 4.1, 4.1.1, 4.1beta1, etc all should use a URL 
  that just says 4.1)
- update the transition guide URL in ModelLoader.scala
  (this doesn't need to track the specific version number,
  so e.g. 4.1, 4.1.1, 4.1beta1, etc all should use a URL 
  that just says 4.1)
- update versions.html (consider: if the release is on a branch,
  does the trunk need to be updated as well?)
- update requirements.html.  
- update the Scala version in dist/lab-readme.txt, dist/lab-build.sh,
  docs/controlling.html, docs/extensions.html, docs/versions.html
- write the release announcement (take the last announcement
  and insert the change list from the wiki. see instructions in next
  section about how to generate a nicely formatted E-mail from an HTML
  change list)

release.txt bullets:
- where do you get the change list?
  if it's a full (non-beta) release (e.g. 3.0, 3.1, etc.) then
  the change list should be since the last full release, so it'll
  come from versions.html.  if it's a beta, then the change list
  will either be since the last full release, if it's the first
  beta, otherwise it's since the previous beta.  in the former case
  the changes come from versions.html; in the latter case from the
  wiki, although you'll want to edit down (leave out 
  minor changes) the same way you edit it down for
  versions.html.  you could actually use the versions.html diffs
  instead of the wiki, but that might be hard/impossible if someone
  did a bunch of other edits to versions.html, like changing the
  wording of existing entries or rearranging the order.
- for prereleases, don't forget to list all known issues (that is, known regressions)
  in every release announcement, even if we already mentioned them
  in the previous announcement; if stuff that people would ordinarily
  expect to work is broken, we need to remind them about it in
  every release
- OK, so you've got your change list in HTML (either versions.html
  or the wiki).  here's how to generate nicely formatted text-only
  bullets from it, suitable for E-mailing.  save the HTML file to 
  disk.  then use lynx (it's available on ccl, or you can install
  it on your local machine) as follows to generate the text version:
    lynx -dump -nolist foo.html > foo.txt
  Then find the relevant section of foo.txt and insert it into
  release.txt, replacing the old bullets.  Make sure that the
  lines are no longer than 70 characters.  Also lynx has an
  annoying habit of using "o" (lowercase O) as a bullet character,
  which looks funny, so I suggest searching and replacing " o "
  (note spaces before and after) with a different bullet character
  like = or + or - , whatever isn't already being used.

tagging:
- make sure any uncommitted changes have been committed and pushed
  (by doing "git st")
- tag the release in git
  - since the contents of the release bundles are spread across
    multiple repos (main repo, models repo, extensions repo,
    Mathematica Link repo) you need to tag the release in every
    repo.  (it'd be nice if we automated this)

building installers:
- you may want to do a fresh checkout instead of using an old one
- run make
- run bin/release.sh
- if you had to change NetLogo.install4j, commit the changes, if you
  saved it from the app make sure to convert from windows line endings
  and you need to preserve the @@@VM@@@ placeholder.
- TAG THE RELEASE!  IN EVERY REPO! DON'T FORGET!!  send yourself an
  email to remind yourself, do it right now!
- release.sh prints out the appropriate rsync command when it finishes
  to copy it to the server
- if the permissions on the server don't come out right:
  - ssh ccl.northwestern.edu chmod -R go+rX /var/www/netlogo/4.1.1
  - ssh ccl.northwestern.edu chgrp -R web /var/www/netlogo/4.1.1
- on the CCL wiki main page, update the link to the latest version

testing:
- look at the Windows install log, were there errors?
- are the version number (twice) and build date right in the readme?
- is the version number right in the app about box?
- is the version number right in the HTML doc?
- is the version number right in the PDF doc?
- can the doc be opened from the Help menu in the app?
- are all the changes that the release announcement claims
  are there actually there?
- are the right models included?
  - are recent model changes included?
  - was "make copymodels" done?
- do all of the test applets work?  url is e.g.
  http://ccl.northwestern.edu/netlogo/5.0RC3/applet/
- do extensions work, e.g. the sound models?
- does the 3D view work?  does the 3D app work?
- does the system dynamics modeler work?
- does the logging launcher work?
- does BehaviorSpace work?
- Windows:
  - after installing, does double clicking a model file open
    the new version?
- for now you need to remove models/HubNet Activities/Code Examples
  from the directory.  It's ugly and maybe it should be
  handled by the scripts on the webserver but it's not, so do it by hand
  or modify the scripts yourself :)
- does it work on Java 5, such as on Mac OS X 10.4 and 10.5?
  (it'd be nice if we had an easy way to test this)

IF PUBLIC:
- on ccl (using zsh, so ** syntax works):
  cd /var/www/netlogo/4.1.1
  chgrp -R web . ; chmod -R g=rwX,o=rX .
  cd ..
  rm 3.1  # remove symbolic link -- check first
  ln -s 3.1beta5 3.1
  # following only if needed (only if this is now the main,
  #   official, stable, recommended NetLogo version, not a
  #   beta or anything like that)
  #rm docs
  #ln -s 4.1/docs docs
  emacs download.shtml download.cgi   # update
  emacs index.shtml  #  announce new version
  emacs whatsnew.html
  emacs whatsnew4_0.html
  #grep for the old version number in /var/www/netlogo/*html
  # only if major release
  # put up new extensions -- note that many of the extensions are now
  # included in the download you need not upload or add links to these
  # tarballs, instead, make sure to name which extension are included.
  # Other extensions (currently Speech and Palette, should be put up in
  # the extensions directory and linked to from extensionss.shtml with a
  # short description.
  # make sure the Models Library and Community Models pages
  # is still OK -- change symoblic links
  # ln -s ../4.1/models models/models
  # ln -s ../4.1/NetLogoLite.jar models/NetLogoLite.jar
  # ln -s ../../4.1/NetLogoLite.jar models/community/NetLogoLite.jar 
  # hand update models/index.cgi with "Added on ..."
  # files that probably have an old version number
  # faq.html, behaviorspace.html , hubnet.html,
  # models/model.cgi and models/community/model.cgi
  # in models/community/model.cgi make sure to add or
  # update the case that sets the most up to
  # to date version of each release (i.e. 3.0 -> 3.0.2). 
  # There's probably a  better way to do this, if so, do it!

announcements & web pages:
- DID YOU TAG THE RELEASE YET?
- mark the milestone as closed in Trac
- if public, update the NetLogo pages (including the download forms
  -- be sure to actually grep for the old version number, because if
  you don't, you're almost certain to miss some) and PartSims home page,
  including the what's new notice in the Models Library
- build updated versions of the extension tarballs (make extension-tarballs);
  create an extensions folder in the release tree on ccl and copy 
  the tarballs; add links to the tarballs in extensions.shtml.
  Note: don't replace the old versions, keep the
  old versions available since people may still be using those
  NetLogo versions.
- send the release bullets to ccl@ccl.northwestern.edu
  (make sure it includes known issues, that is, regressions, even
  if they are carried over from a previous prerelease)
- send the public release announcement to Uri for him to send
  to whoever he wants.
- copy the sound extension into the models/Sample Models/Art
  and models/Sample Models/Games folders on the server so that
  the Sound Machines and Frogger applets work.  (yeah, it
  sucks to have to do this by hand every time, but it's only
  two models, we can do better later)

************************************
*** DID YOU TAG THE RELEASE YET? ***
************************************

post-release:
- ask ccl-tech to roll over the download log?
- bump the version number again in version.txt
  and change BUILD_DATE back to "INTERIM DEVEL BUILD"
- maybe run benchmarks
- maybe update architecture page, devel requirements page, and others
  in wiki
- if public, announce on the netlogo account on Twitter
- if public, announce to: LogoForum, Apple site, comp.simulation,
  maintainer of the Logo implementation,
  http://www.macupdate.com/info.php/id/21469/netlogo ,
  list know elsewhere?
- if Uri made changes to the release announcement when he sent it,
  make sure you get his changes into git.

************************************
*** DID YOU TAG THE RELEASE YET? ***
************************************
